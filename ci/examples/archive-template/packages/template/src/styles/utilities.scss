/// //
/// // Copyright IBM Corp. 2018, 2018
/// //
/// // This source code is licensed under the Apache-2.0 license found in the
/// // LICENSE file in the root directory of this source tree.
/// //
///
/// /// Map deep get
/// /// @author Hugo Giraudel
/// /// @access public
/// /// @param {Map} $map - Map
/// /// @param {Arglist} $keys - Key chain
/// /// @return {*} Desired value
/// /// @group @carbon/layout
/// @function map-deep-get($map, $keys...) {
///     @each $key in $keys {
///         $map: map-get($map, $key);
///     }
///     @return $map;
/// }
///
/// /// Provide a map and index, and get back the relevant key value
/// /// @access public
/// /// @param {Map} $map - Map
/// /// @param {Integer} $index - Key chain
/// /// @return {String} Desired value
/// /// @group @carbon/layout
/// @function carbon--key-by-index($map, $index) {
///     $keys: map-keys($map);
///     @return nth($keys, $index);
/// }
///
/// /// Pass in a map, and get the last one in the list back
/// /// @access public
/// /// @param {Map} $map - Map
/// /// @return {*} Desired value
/// /// @group @carbon/layout
/// @function last-map-item($map) {
///     $total-length: length($map);
///     @return map-get($map, carbon--key-by-index($map, $total-length));
/// }
///

/// //
/// // Copyright IBM Corp. 2018, 2018
/// //
/// // This source code is licensed under the Apache-2.0 license found in the
/// // LICENSE file in the root directory of this source tree.
/// //
///
/// @use "sass:meta";
/// @use "sass:math";
///
/// /// Default font size
/// /// @type Number
/// /// @access public
/// /// @group @carbon/layout
/// $base-font-size: 16px !default;
///
/// /// Convert a given px unit to a rem unit
/// /// @param {Number} $px - Number with px unit
/// /// @return {Number} Number with rem unit
/// /// @access public
/// /// @group @carbon/layout
/// @function rem($px) {
/// @if unit($px) != "px" {
/// // TODO: update to @error in v11
/// @warn "Expected argument $px to be of type `px`, instead received: `#{unit($px)}`";
/// }
///
/// @if meta.function-exists("div", "math") {
/// @return math.div($px, $base-font-size) * 1rem;
/// } @else {
/// @return ($px / $base-font-size) * 1rem;
/// }
/// }
///
/// /// Convert a given px unit to a em unit
/// /// @param {Number} $px - Number with px unit
/// /// @return {Number} Number with em unit
/// /// @access public
/// /// @group @carbon/layout
/// @function em($px) {
/// @if unit($px) != "px" {
/// // TODO: update to @error in v11
/// @warn "Expected argument $px to be of type `px`, instead received: `#{unit($px)}`";
/// }
///
/// @if meta.function-exists("div", "math") {
/// @return math.div($px, $base-font-size) * 1em;
/// } @else {
/// @return ($px / $base-font-size) * 1em;
/// }
/// }

@function negative($value) {
    @return $value * -1
}