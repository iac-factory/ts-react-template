@use "sass:color";

/* Colors --- */

@use "@carbon/colors/scss/mixins" as *;

/* SCSS, React Styles --- */

@use "@carbon/react/scss/motion" as *;
@use "@carbon/react/scss/spacing" as *;
@use "@carbon/react/scss/breakpoint" as *;

/* Theme Export(s) --- */

@use "@carbon/themes/scss/generated/tokens" as Tokens;
@use "@carbon/themes/scss/generated/mixins" as Mixins;
@use "@carbon/themes/scss/generated/themes" as Themes;

.button {
    width: $spacing-09;
    height: $spacing-09;
    border-radius: 50%;
    border-color: Tokens.$icon-03;
    background: rgb(75, 75, 75);
    transition: background-color 250ms ease 0ms;
    padding-top: 0.325rem;
    cursor: pointer;
    position: fixed;
    bottom: $spacing-03;
    right: $spacing-03;

    @include breakpoint(md) {
        bottom: $spacing-05;
        right: $spacing-06;
    }
}

.button svg {
    fill: Tokens.$icon-03;
}

.button:hover {
    background: darken(rgba(75, 75, 75, 0.85), 5);
}

.button::after {
    pointer-events: none;
    background-color: var(--cds-tag-background-gray);
    border-radius: 2px;
    color: #fff;
    content: attr(data-tooltip-title) " ";
    font-weight: normal;
    min-width: 100px;
    padding: 5px 8px;
    text-align: center;
    text-transform: none;

    transition: opacity 250ms ease 0ms, transform 250ms ease 0ms;
}

.button::before {
    width: 0;
    height: 0;
    content: "";

    transition: opacity 250ms ease 0ms, transform 250ms ease 0ms;

    pointer-events: none;
}

.button::before,
.button::after {
    position: absolute;
    transition: opacity 250ms ease 0ms, transform 250ms ease 0ms;
    transform-style: preserve-3d;
    opacity: 0;
    z-index: -1;

    pointer-events: none;
}

.button[data-tooltip-position="top"]::after,
.button[data-tooltip-position="bottom"]::after {
    left: 50%;
}

.button[data-tooltip-position="top"]::after {
    transform: translate3d(-50%, 10px, 0);
}

.button[data-tooltip-position="bottom"]::after {
    transform: translate3d(-50%, -10px, 0);
}

.button[data-tooltip-position="top"]::after {
    bottom: calc(100% + 10px);
}

.button[data-tooltip-position="bottom"]::after {
    top: calc(100% + 10px);
}

.button[data-tooltip-position="left"]::after,
.button[data-tooltip-position="right"]::after {
    top: 50%;
}

.button[data-tooltip-position="left"]::after {
    transform: translate3d(10px, -50%, 0);
}

.button[data-tooltip-position="right"]::after {
    transform: translate3d(-10px, -50%, 0);
}

.button[data-tooltip-position="left"]::after {
    right: calc(100% + 14px);
}

.button[data-tooltip-position="right"]::after {
    left: calc(100% + 10px);
}

/* Pointers */

.button[data-tooltip-position="top"]::before,
.button[data-tooltip-position="bottom"]::before {
    border-left: 7px solid transparent;
    border-right: 7px solid transparent;
    left: 50%;
}

.button[data-tooltip-position="top"]::before {
    transform: translate3d(-50%, 10px, 0);
}

.button[data-tooltip-position="bottom"]::before {
    transform: translate3d(-50%, -10px, 0);
}

.button[data-tooltip-position="top"]::before {
    border-top: 7px solid var(--cds-tag-background-gray);
    bottom: calc(100% + 5px);
}

.button[data-tooltip-position="bottom"]::before {
    border-bottom: 7px solid var(--cds-tag-background-gray);
    top: calc(100% + 5px);
}

.button[data-tooltip-position="left"]::before,
.button[data-tooltip-position="right"]::before {
    border-top: 7px solid transparent;
    border-bottom: 7px solid transparent;

    top: 50%;
}

.button[data-tooltip-position="left"]::before {
    transform: translate3d(10px, -50%, 0);
}

.button[data-tooltip-position="right"]::before {
    transform: translate3d(-10px, -50%, 0);
}

.button[data-tooltip-position="left"]::before {
    border-left: 7px solid var(--cds-tag-background-gray);
    right: calc(100% + 7px);
}

.button[data-tooltip-position="right"]::before {
    border-right: 7px solid var(--cds-tag-background-gray);
    left: calc(100% + 5px);
}

.button:hover::before,
.button:hover::after {
    opacity: 1;
}

.button[data-tooltip-position="top"]:hover::before,
.button[data-tooltip-position="bottom"]:hover::before,
.button[data-tooltip-position="top"]:hover::after,
.button[data-tooltip-position="bottom"]:hover::after {
    transform: translate3d(-50%, 0px, 0);
}

.button[data-tooltip-position="left"]:hover::before,
.button[data-tooltip-position="right"]:hover::before,
.button[data-tooltip-position="left"]:hover::after,
.button[data-tooltip-position="right"]:hover::after {
    transform: translate3d(0px, -50%, 0);
}

.button:active {
    background: $gray-90;
}

.button:active:hover::before,
.button:active:hover::before,
.button:active:hover::before,
.button:active:hover::before {
    opacity: 0;
}

.button:active:hover::after,
.button:active:hover::after,
.button:active:hover::after,
.button:active:hover::after {
    opacity: 0;
}

@media (max-width: 42rem) {
    .button {
        display: none;
    }
}
